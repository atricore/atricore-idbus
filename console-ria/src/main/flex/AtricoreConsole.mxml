<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Atricore Console
  ~
  ~ Copyright 2009-2010, Atricore Inc.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<s:Application xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:view="com.atricore.idbus.console.modeling.view.*"
               xmlns:modeler="com.atricore.idbus.console.modeling.main.*"
               xmlns:comp="com.atricore.idbus.console.components.*"
               xmlns:login="com.atricore.idbus.console.main.view.login.*"
               xmlns:lifecycle="com.atricore.idbus.console.lifecycle.*"
               xmlns:account="com.atricore.idbus.console.account.main.*"
               xmlns:setup="com.atricore.idbus.console.setup.*"
               height="100%" width="100%" minWidth="955" minHeight="600"
               preloader="com.atricore.idbus.console.branding.AtricoreConsolePreloader"
               creationComplete="onCreationComplete()">
    <s:layout>
        <s:BasicLayout/>
    </s:layout>


    <fx:Script>
      <![CDATA[
        import com.atricore.idbus.console.main.ApplicationFacade;

        import com.atricore.idbus.console.main.EmbeddedIcons;

        import mx.collections.ArrayList;

        import org.puremvc.as3.patterns.observer.Notification;

        private var m_facade:ApplicationFacade;

        public static const BUNDLE:String = "console";

        private function onCreationComplete():void {

            trace("OnCreationComplete");

            // --- Configuring IoC facade through addConfigSource()
            m_facade = ApplicationFacade.getInstance();
            m_facade.addConfigSource("flex/flexApplicationContext.xml");
            m_facade.addEventListener(Event.COMPLETE, startupApp);
            m_facade.initializeIocContainer();
        }

        private function startupApp(p_event:Event):void {
            m_facade.removeEventListener(Event.COMPLETE, startupApp);
            m_facade.notifyObservers(new Notification(ApplicationFacade.STARTUP, this));
        }

        private function stackChanged():void {
            modulesViewStack.selectedIndex = stackButtonBar.selectedIndex;
        }
      ]]>
    </fx:Script>

    <fx:Declarations>
        <mx:Iris id="irisIn" scaleXFrom="0" scaleYFrom="0" scaleXTo="1" scaleYTo="1" duration="200"/>
        <mx:Iris id="irisOut" scaleXFrom="1" scaleYFrom="1" scaleXTo="0" scaleYTo="0" duration="200"/>
        <mx:WipeDown id="wipeDown" duration="200"/>
        <mx:WipeUp id="wipeUp" duration="200"/>
        <mx:WipeRight id="wipeRight" duration="200"/>
    </fx:Declarations>

    <fx:Metadata>
        [ResourceBundle("console")]
    </fx:Metadata>

    <fx:Style source="../resources/style/yflexskin.css"/>
    <fx:Style source="../resources/style/style.css"/>

    <s:states>
        <s:State name="splash"/>
        <s:State name="operation"/>
    </s:states>

    <s:VGroup paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"
              width="100%" height="100%" includeIn="splash,operation">
        <!--minHeight="955" minWidth="600">-->
        <s:HGroup paddingTop="2" paddingLeft="10" paddingRight="10" height="8%" width="100%" includeIn="splash,operation">
            <mx:Image source="@Embed('/assets/icons/ui/a3c_logo.jpeg')"/>
            <comp:MessageBox id="messageBox" showEffect="{wipeRight}" width="100%" height="70%" verticalAlign="middle" horizontalAlign="center" />
            <s:HGroup id="topBox" styleName="topBox" width="100%" height="100%" includeIn="operation" verticalAlign="middle" horizontalAlign="right">
                <mx:MenuBar id="userActionMenuBar" width="9%" labelField="@label">
                    <fx:XMLList>
                        <menuitem label="Administrator">
                            <menuitem label="Change Password"/>
                            <menuitem label="Logout"/>
                        </menuitem>
                    </fx:XMLList>
                </mx:MenuBar>
            </s:HGroup>
        </s:HGroup>

        <mx:HRule width="100%"/>

            <login:LoginView id="loginView" includeIn="splash"/>
            <s:ButtonBar id="stackButtonBar" dataProvider="{new ArrayList(modulesViewStack.content)}" labelField="name"
                         change="stackChanged()" skinClass="com.atricore.idbus.console.skin.buttonbar.IconButtonBarSkin"
                         includeIn="operation"/>

            <comp:CustomViewStack id="modulesViewStack" width="100%" height="100%" includeIn="operation">
                <modeler:ModelerView id="modelerView" name="Modeler"/>
                <lifecycle:LifecycleView id="lifecycleView" name="Lifecycle"/>
                <account:AccountManagementView id="accountManagementView" name="Account"/>
                <setup:SetupView id="setupView" name="Setup"/>
                <!--<s:Group width="95%" height="95%" name="Setup">-->
                <!--<s:Label text="Setup"/>-->
                <!--<s:BitmapImage id="icon" source="{EmbeddedIcons.setupMiniIcon}" />-->
                <!--</s:Group>-->

            </comp:CustomViewStack>


    </s:VGroup>
</s:Application>
