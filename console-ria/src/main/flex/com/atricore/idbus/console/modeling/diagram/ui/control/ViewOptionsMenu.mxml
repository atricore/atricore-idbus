<?xml version="1.0" ?>
<!--
  ~ Atricore Console
  ~
  ~ Copyright 2009-2010, Atricore Inc.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<mx:MenuBar xmlns:mx="http://www.adobe.com/2006/mxml"
                    toolTip="{resourceManager.getString(AtricoreConsole.BUNDLE, 'graph.control.view.options.tooltip')}"
                    labelField="@label" itemClick="ToggleButtonsInToolBar(event)"
                    
                    dataProvider="{menuOptionList}">
    <mx:XML id="menuOptionList">
        <menuItem name="viewOptionsItem" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'graph.control.view.options')}">
            <subMenuItem id="autofitItem" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'graph.control.autofit')}" type="Check" toggled="true" />
            <subMenuItem id="disableAnimationItem" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'graph.control.disable.animation')}" type="Check" toggled="false"/>
        </menuItem>
    </mx:XML>

    <mx:Script><![CDATA[
        import mx.events.MenuEvent;

        import org.un.cava.birdeye.ravis.graphLayout.visual.VisualGraph;
        import org.un.cava.birdeye.ravis.utils.events.VGraphEvent;

        private var _vgraph:VisualGraph;

        private var _autofit:Boolean = true;
        private var _disableAnimations:Boolean = false;

        /**
         * Provides access to the registered vgraph object.
         * */
        public function set vgraph(v:VisualGraph):void {
            _vgraph = v;
            registerListeners();
        }

        /**
         * @private
         * */
        public function get vgraph():VisualGraph {
            return _vgraph;
        }

        private function ToggleButtonsInToolBar(event:MenuEvent):void {
            var itemId:String = event.item.@id;

            switch (itemId) {
                case "autofitItem":
                    _autofit = event.item.@toggled;
                    toggleAutoFit(_autofit);
                    break;
                case "disableAnimationItem":
                    _disableAnimations = event.item.@toggled;
                    toggleAnimation(_disableAnimations);
                    break;
                default:
                    break;
            }
        }

        /**
         * toggles the autoFit capability of most layouters.
         * */
        public function toggleAutoFit(toggle:Boolean):void {

            /* check if we have a layouter at all */
            if (_vgraph == null || _vgraph.layouter == null) {
                trace("Cannot toggle AutoFit to missing vgraph or null layouter");
                return;
            }

            _vgraph.layouter.autoFitEnabled = toggle;
            _vgraph.layouter.layoutChanged = true;
            _vgraph.draw();
        }

        public function toggleAnimation(toggle:Boolean):void {

            /* check if we have a layouter at all */
            if (_vgraph == null || _vgraph.layouter == null) {
                trace("Cannot toggle Animation on missing vgraph or null layouter");
                return;
            }
            _vgraph.layouter.resetAll(); // to kill any timers
            _vgraph.layouter.disableAnimation = toggle;
        }


        /**
         * Event handler to be triggered in case the
         * layouter in VGraph has changed.
         * Only used to apply the current value to the new layouter.
         * */
        public function layouterChanged(e:VGraphEvent = null):void {

            /* check if we have a layouter at all */
            if (_vgraph == null || _vgraph.layouter == null) {
                trace("Cannot toggle AutoFit to missing vgraph or null layouter");
                return;
            }

            /* this is a default control component, and valid
             * for all layouters, thus we only need to apply
             * the value to the new layouter.
             */
            _vgraph.layouter.autoFitEnabled = _autofit;
            _vgraph.layouter.disableAnimation = _disableAnimations;
            _vgraph.layouter.layoutChanged = true;
        }


        /**
         * This refreshes the current value of the
         * checkbox with the value in the layouter.
         * */
        public function refreshCheckbox(e:VGraphEvent = null):void {
            /* check if we have a layouter at all */
            if (_vgraph == null || _vgraph.layouter == null) {
                trace("Cannot refresh AutoFit from missing vgraph or null layouter");
                return;
            }
            /* refresh the value */
            _autofit = _vgraph.layouter.autoFitEnabled;
            _disableAnimations = _vgraph.layouter.disableAnimation;
            menuOptionList[0].subMenuItem[0].@toggle = _autofit;
            menuOptionList[0].subMenuItem[1].@toggle = _disableAnimations;
        }

        /**
         * Adds the listeners to update on changes in the VGraph
         * */
        private function registerListeners():void {
            _vgraph.addEventListener(VGraphEvent.VGRAPH_CHANGED, refreshCheckbox);
            _vgraph.addEventListener(VGraphEvent.LAYOUTER_CHANGED, layouterChanged);
        }


        ]]></mx:Script>
</mx:MenuBar>



