<?xml version="1.0"?>
<!--
  ~ Atricore Console
  ~
  ~ Copyright 2009-2010, Atricore Inc.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<WizardStep
        xmlns="com.atricore.idbus.console.components.wizard.*"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        stepName="Identity Appliance"
        xmlns:utils="com.atricore.idbus.console.components.*"
        creationComplete="initForm()">

        <fx:Script>
        <![CDATA[

            import com.atricore.idbus.console.services.dto.IdentityAppliance;
            import com.atricore.idbus.console.services.dto.IdentityApplianceDefinition;
            import com.atricore.idbus.console.services.dto.Location;

            public static const DEFAULT_PORT:String = "8081";
            public static const DEFAULT_CONTEXT:String = "IDBUS";
            
            [Bindable]
            private var validators:Array;

            /**
             * This will hold the results
             */
            private var readableDecisionArray:Array;

            override public function get stepDecision():* {
                var idApplianceDef:IdentityApplianceDefinition = new IdentityApplianceDefinition();
                idApplianceDef.name = applianceName.text;
                idApplianceDef.description = applianceDescription.text;
                idApplianceDef.namespace = applianceNamespace.text;

                var location:Location = new Location();
                location.protocol = applianceLocationProtocol.selectedItem.data;
                location.host = applianceLocationDomain.text;
                location.port = parseInt(applianceLocationPort.text);
                //location.context = applianceLocationPath.text;
                location.context = DEFAULT_CONTEXT;
                location.uri = createApplianceLocationURI();
                idApplianceDef.location = location;

                idApplianceDef.userDashboardBranding = userDashboardBrandingCombo.selectedItem;

                var identityAppliance:IdentityAppliance = new IdentityAppliance();
                identityAppliance.namespace = applianceNamespace.text;
                identityAppliance.idApplianceDefinition = idApplianceDef;
                return identityAppliance;
            }

            override public function get readableStepDecision():String {
                readableDecisionArray = new Array();
                readableDecisionArray.push("Appliance name: " + applianceName.text);
                readableDecisionArray.push("Appliance description: " + applianceDescription.text);
                readableDecisionArray.push("Appliance namespace: " + applianceNamespace.text);
                readableDecisionArray.push("Appliance location: " + applianceLocationProtocol.labelDisplay.text + "://" +
                        applianceLocationDomain.text +
                        ((applianceLocationPort.text != null && applianceLocationPort.text != "") ?
                                ":" + applianceLocationPort.text : "") + "/" + DEFAULT_CONTEXT + "/" +
                                createApplianceLocationURI());
                if (userDashboardBrandingCombo.dataProvider.length > 0) {
                    readableDecisionArray.push("Appliance branding: " + userDashboardBrandingCombo.selectedItem.description);
                }
                return readableDecisionArray.join("\n").toString();
            }

            private function initForm():void {
                applianceLocationPort.text = DEFAULT_PORT;
                if (validators == null) {
                    validators = new Array();
                    validators.push(nameValidator);
                    validators.push(portValidator);
                    validators.push(domainValidator);
                    //validators.push(pathValidator);
                    validators.push(namespaceValidator);
                }
                focusManager.setFocus(applianceName);
            }

            private function handleFormChange(event:Event):void {
                // Check the step validity
                applianceForm.validateForm(event);
                isValid = applianceForm.isValid;
            }

            private function createApplianceLocationURI():String {
                var locationUri:String = applianceName.text.toUpperCase();
                locationUri = locationUri.replace(/\s+/g, "-");
                return locationUri;
            }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <utils:NameValidator id="nameValidator" source="{applianceName}" required="true" property="text"/>
        <mx:NumberValidator id="portValidator" source="{applianceLocationPort}" required="false" property="text" minValue="1" maxValue="65535"
                            invalidCharError="{resourceManager.getString(AtricoreConsole.BUNDLE, 'idappliance.portValidationError')}"/>
        <utils:URLPartValidator id="domainValidator" source="{applianceLocationDomain}" required="true" property="text"/>
        <!--utils:URLPartValidator id="pathValidator" source="{applianceLocationPath}" required="false" property="text"/-->
        <utils:NamespaceValidator id="namespaceValidator" source="{applianceNamespace}" required="true" property="text"/>
    </fx:Declarations>

    <s:VGroup width="100%" height="100%">
        <utils:ValidatingForm id="applianceForm" width="100%" height="100%" validators="{validators}" labelWidth="120">

            <mx:FormItem label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'idappliance.form.name')}:" required="true">
                <s:TextInput id="applianceName" change="handleFormChange(event);"/>
            </mx:FormItem>

            <mx:FormItem label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'idappliance.form.description')}:">
                <s:TextArea id="applianceDescription" height="80" change="handleFormChange(event);"/>
            </mx:FormItem>

            <mx:FormItem label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'idappliance.form.namespace')}:" required="true">
                <s:TextInput id="applianceNamespace" width="245" change="handleFormChange(event);"/>
            </mx:FormItem>

            <mx:FormItem label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'idappliance.form.applianceLocation')}:"
                         direction="horizontal" required="true">
                <s:DropDownList id="applianceLocationProtocol" width="70" selectedIndex="0">
                    <mx:ArrayCollection>
                        <fx:Object label="http" data="http"/>
                        <fx:Object label="https" data="https"/>
                    </mx:ArrayCollection>
                </s:DropDownList>
                <s:Label text="://" width="9" paddingLeft="-5" paddingTop="5"/>
                <s:TextInput id="applianceLocationDomain" width="150" change="handleFormChange(event);"/>
                <s:Label text=":" width="1" paddingLeft="-5" paddingTop="5"/>
                <s:TextInput id="applianceLocationPort" width="40" change="handleFormChange(event);"/>
                <!--s:Label text="/" width="2" paddingLeft="-5" paddingTop="5"/>
                <s:TextInput id="applianceLocationPath" styleName="locationInput" width="100" change="handleFormChange(event);"/-->
            </mx:FormItem>

            <mx:FormItem label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'idappliance.form.branding')}:">
                <s:DropDownList id="userDashboardBrandingCombo" width="200" labelField="name" selectedIndex="0" requireSelection="true" />
            </mx:FormItem>

        </utils:ValidatingForm>
    </s:VGroup>
</WizardStep>
