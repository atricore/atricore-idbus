<?xml version="1.0" ?>
<!--
  ~ Atricore Console
  ~
  ~ Copyright 2009-2010, Atricore Inc.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<WizardStep
        xmlns="com.atricore.idbus.console.components.wizard.*"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        stepName="External User Repository"
        xmlns:utils="com.atricore.idbus.console.components.*"
        xmlns:components="com.atricore.idbus.console.components.*"
        creationComplete="initForm()"
        show="initFields()">

    <fx:Script>
        <![CDATA[

            import com.atricore.idbus.console.services.dto.DbIdentitySource;
            import com.atricore.idbus.console.services.dto.IdentitySource;
            import com.atricore.idbus.console.services.dto.LdapIdentitySource;
            import com.atricore.idbus.console.services.dto.UserInformationLookup;

            [Bindable]
            private var validators:Array;

            private var readableDecisionArray:Array;

            override public function get stepDecision():* {
                var identitySource:LdapIdentitySource = null;
                identitySource = new LdapIdentitySource();
                identitySource.name = userRepositoryName.text;
                identitySource.description = ldapIdentitySourceDescription.text;
                identitySource.initialContextFactory = initialContextFactory.text;
                identitySource.providerUrl = providerUrl.text;
                identitySource.securityPrincipal = securityPrincipal.text;
                identitySource.securityCredential = securityCredential.text;
                identitySource.securityAuthentication = securityAuthentication.selectedItem.data;
                identitySource.ldapSearchScope = ldapSearchScope.selectedItem.data;
                identitySource.usersCtxDN = usersCtxDN.text;
                identitySource.principalUidAttributeID = principalUidAttributeID.text;
                identitySource.roleMatchingMode = roleMatchingMode.text;
                identitySource.uidAttributeID = uidAttributeID.text;
                identitySource.rolesCtxDN = rolesCtxDN.text;
                identitySource.roleAttributeID = roleAttributeID.text;
                identitySource.credentialQueryString = credentialQueryString.text;
                identitySource.updateableCredentialAttribute = updateableCredentialAttribute.text;
                identitySource.userPropertiesQueryString = userPropertiesQueryString.text;
                return identitySource;
            }

            override public function get readableStepDecision():String {
                readableDecisionArray = new Array();
                return readableDecisionArray.join("\n").toString();
            }

            private function initFields():void {
                callLater(function() {
                    userRepositoryName.text = (previousStepData as IdentitySource).name;
                });
            }

            private function initForm():void {
                if (validators == null) {
                    validators = new Array();
                    validators.push(nameValidator);
                    validators.push(initialContextFactoryValidator);
                    validators.push(providerUrlValidator);
                    validators.push(securityPrincipalValidator);
                    validators.push(securityCredentialValidator);
                    validators.push(usersCtxDNValidator);
                    validators.push(principalUidAttributeIDValidator);
                    validators.push(roleMatchingModeValidator);
                    validators.push(uidAttributeIDValidator);
                    validators.push(rolesCtxDNValidator);
                    validators.push(roleAttributeIDValidator);
                    validators.push(credentialQueryStringValidator);
                    validators.push(updateableCredentialAttributeValidator);
                    validators.push(userPropertiesQueryStringValidator);
                }
            }

            private function handleFormChange(event:Event):void {
                // Check the step validity
                ldapSourceForm.validateForm(event);
                isValid = ldapSourceForm.isValid;
            }

            override public function get isJumpToConditionMet():Boolean {
                return true;
            }

        ]]>
    </fx:Script>
    
    <fx:Declarations>
        <mx:StringValidator id="nameValidator" source="{userRepositoryName}" required="true" property="text"/>
        <mx:StringValidator id="initialContextFactoryValidator" source="{initialContextFactory}" required="true" property="text"/>
        <mx:StringValidator id="providerUrlValidator" source="{providerUrl}" required="true" property="text"/>
        <mx:StringValidator id="securityPrincipalValidator" source="{securityPrincipal}" required="true" property="text"/>
        <mx:StringValidator id="securityCredentialValidator" source="{securityCredential}" required="true" property="text"/>
        <mx:StringValidator id="usersCtxDNValidator" source="{usersCtxDN}" required="true" property="text"/>
        <mx:StringValidator id="principalUidAttributeIDValidator" source="{principalUidAttributeID}" required="true" property="text"/>
        <mx:StringValidator id="roleMatchingModeValidator" source="{roleMatchingMode}" required="true" property="text"/>
        <mx:StringValidator id="uidAttributeIDValidator" source="{uidAttributeID}" required="true" property="text"/>
        <mx:StringValidator id="rolesCtxDNValidator" source="{rolesCtxDN}" required="true" property="text"/>
        <mx:StringValidator id="roleAttributeIDValidator" source="{roleAttributeID}" required="true" property="text"/>
        <mx:StringValidator id="credentialQueryStringValidator" source="{credentialQueryString}" required="true" property="text"/>
        <mx:StringValidator id="updateableCredentialAttributeValidator" source="{updateableCredentialAttribute}" required="true" property="text"/>
        <mx:StringValidator id="userPropertiesQueryStringValidator" source="{userPropertiesQueryString}" required="true" property="text"/>
    </fx:Declarations>

    <s:VGroup width="100%" height="100%">

        <utils:ValidatingForm id="ldapSourceForm" width="100%" height="100%" validators="{validators}" labelWidth="120"
                    paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10">
            <utils:TitledBorderBox title="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ssoWiz.step2.ldapUsersRepository')}"
                           width="100%" height="100%" cornerRadius="5" paddingLeft="10" paddingRight="5" paddingTop="20" paddingBottom="5">

                <mx:TabNavigator borderStyle="solid" width="100%" height="285">

                    <s:NavigatorContent label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.tab.base')}">
                        <s:VGroup>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.name')}:"
                                     required="true">
                            <s:TextInput id="userRepositoryName" width="150" editable="false"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.description')}:">
                            <s:TextInput id="ldapIdentitySourceDescription" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.initialContextFactory')}:"
                                     required="true">
                            <s:TextInput id="initialContextFactory" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.providerUrl')}:"
                                     required="true">
                            <s:TextInput id="providerUrl" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.securityPrincipal')}:"
                                     required="true">
                            <s:TextInput id="securityPrincipal" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.securityCredential')}:"
                                     required="true">
                            <s:TextInput id="securityCredential" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.securityAuthentication')}:"
                                     required="true">
                            <s:DropDownList id="securityAuthentication" selectedIndex="0" width="180">
                                <s:dataProvider>
                                    <mx:ArrayCollection>
                                        <fx:Object label="None" data="none"/>
                                        <fx:Object label="Simple" data="simple"/>
                                        <fx:Object label="Strong" data="strong"/>
                                    </mx:ArrayCollection>
                                </s:dataProvider>
                            </s:DropDownList>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.ldapSearchScope')}:"
                                     required="true">
                            <s:DropDownList id="ldapSearchScope" selectedIndex="0" width="180">
                                <s:dataProvider>
                                    <mx:ArrayCollection>
                                        <fx:Object label="Base" data="base"/>
                                        <fx:Object label="One" data="one"/>
                                        <fx:Object label="Subtree" data="subtree"/>
                                        <fx:Object label="Children" data="children"/>
                                    </mx:ArrayCollection>
                                </s:dataProvider>
                            </s:DropDownList>
                        </mx:FormItem>

                        </s:VGroup>
                    </s:NavigatorContent>

                    <s:NavigatorContent label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.tab.lookup')}">
                        <s:VGroup>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.usersCtxDN')}:"
                                     required="true">
                            <s:TextInput id="usersCtxDN" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.principalUidAttributeID')}:"
                                     required="true">
                            <s:TextInput id="principalUidAttributeID" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.roleMatchingMode')}:"
                                     required="true">
                            <s:TextInput id="roleMatchingMode" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.uidAttributeID')}:"
                                     required="true">
                            <s:TextInput id="uidAttributeID" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.rolesCtxDN')}:"
                                     required="true">
                            <s:TextInput id="rolesCtxDN" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.roleAttributeID')}:"
                                     required="true">
                            <s:TextInput id="roleAttributeID" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.updateableCredentialAttribute')}:"
                                     required="true">
                            <s:TextInput id="updateableCredentialAttribute" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.credentialQueryString')}:"
                                     required="true">
                            <s:TextInput id="credentialQueryString" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        <mx:FormItem labelWidth="160" label="{resourceManager.getString(AtricoreConsole.BUNDLE, 'ldapIdentitySource.userPropertiesQueryString')}:"
                                     required="true">
                            <s:TextInput id="userPropertiesQueryString" width="300" change="handleFormChange(event);"/>
                        </mx:FormItem>

                        </s:VGroup>
                    </s:NavigatorContent>

                </mx:TabNavigator>
                
            </utils:TitledBorderBox>
        </utils:ValidatingForm>

    </s:VGroup>

</WizardStep>