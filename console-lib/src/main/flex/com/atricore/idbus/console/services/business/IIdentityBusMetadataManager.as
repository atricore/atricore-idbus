/*
 * Atricore IDBus
 *
 *   Copyright 2009, Atricore Inc.
 *
 *   This is free software; you can redistribute it and/or modify it
 *   under the terms of the GNU Lesser General Public License as
 *   published by the Free Software Foundation; either version 2.1 of
 *   the License, or (at your option) any later version.
 *
 *   This software is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *   Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public
 *   License along with this software; if not, write to the Free
 *   Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 *   02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.atricore.idbus.console.services.business {

import flash.events.IEventDispatcher;

import mx.rpc.AsyncToken;

import org.atricore.idbus.capabilities.management.main.spi.request.*;

public interface IIdentityBusMetadataManager extends IEventDispatcher {

    //TODO remove! flex will access metadata management functionality through ajax services!

//        function updateSAMLR2IDPProvider(req: UpdateIdentityProviderRequest):AsyncToken;
//        function removeSAMLR2IDPProvider(req: RemoveSAMLR2IDPProviderRequest):AsyncToken;
//        function findSAMLR2IDPProviderByName(req: FindSAMLR2IDPProviderByNameRequest):AsyncToken;
//        function listSAMLR2IDPProviders(req: ListSAMLR2IDPProvidersRequest):AsyncToken;


//        function updateSAMLR2SPProvider(req: UpdateSAMLR2SPProviderRequest):AsyncToken;
//        function removeSAMLR2SPProvider(req: RemoveSAMLR2SPProviderRequest):AsyncToken;
//        function findSAMLR2SPProviderByName(req: FindSAMLR2SPProviderByNameRequest):AsyncToken;
//        function listSAMLR2SPProviders(req: ListSAMLR2SPProvidersRequest):AsyncToken;
//
//        function addSAMLR2IDPChannel(req: AddSAMLR2IDPChannelRequest):AsyncToken;
//        function updateSAMLR2IDPChannel(req: UpdateSAMLR2IDPChannelRequest):AsyncToken;
//        function removeSAMLR2IDPChannel(req: RemoveSAMLR2IDPChannelRequest):AsyncToken;
//        function findSAMLR2IDPChannelByName(req: FindSAMLR2IDPChannelByNameRequest):AsyncToken;
//        function listSAMLR2IDPChannels(req: ListSAMLR2IDPChannelsRequest):AsyncToken;
//
//        function addSAMLR2SPChannel(req: AddSAMLR2SPChannelRequest):AsyncToken;
//        function updateSAMLR2SPChannel(req: UpdateSAMLR2SPChannelRequest):AsyncToken;
//        function removeSAMLR2SPChannel(req: RemoveSAMLR2SPChannelRequest):AsyncToken;
//        function findSAMLR2SPChannelByName(req: FindSAMLR2SPChannelByNameRequest):AsyncToken;
//        function listSAMLR2SPChannels(req: ListSAMLR2SPChannelsRequest):AsyncToken;
//
//        function findUserInformationLookup(req: FindUserInformationLookupRequest):AsyncToken;
//        function listUserInformationLookups(req: ListUserInformationLookupsRequest):AsyncToken;
//
//        function findAuthenticationContracts(req: FindAuthenticationContractRequest):AsyncToken;
//        function listAuthenticationContracts(req: ListAuthenticationContractsRequest):AsyncToken;
//
//        function findAuthenticationMechanisms(req: FindAuthenticationMechanismRequest):AsyncToken;
//        function listAuthenticationMechanisms(req: ListAuthenticationMechanismsRequest):AsyncToken;
//
//        function findAccountLinkagePolicy(req: FindAccountLinkagePolicyRequest):AsyncToken;
//        function listAccountLinkagePolicies(req: ListAccountLinkagePoliciesRequest):AsyncToken;
//
//        function findAuthenticationAssertionEmissionPolicy(req: FindAuthenticationAssertionEmissionPolicyRequest):AsyncToken;
//        function listAuthenticationAssertionEmissionPolicies(req: ListAuthenticationAssertionEmissionPoliciesRequest):AsyncToken;


    }
}