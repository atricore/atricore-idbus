<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Atricore IDBus
  ~
  ~ Copyright 2009, Atricore Inc.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<schema targetNamespace="urn:oasis:names:tc:SPML:2:0:search"
        xmlns="http://www.w3.org/2001/XMLSchema"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns:spml="urn:oasis:names:tc:SPML:2:0"
        xmlns:spmlsearch="urn:oasis:names:tc:SPML:2:0:search"
        elementFormDefault="qualified">

    <import namespace='urn:oasis:names:tc:SPML:2:0'
            schemaLocation='pstc_spmlv2_core.xsd'/>

    <simpleType name="ScopeType">
        <restriction base="string">
            <enumeration value="pso"/>
            <enumeration value="oneLevel"/>
            <enumeration value="subTree"/>
        </restriction>
    </simpleType>

    <complexType name="SearchQueryType">
        <complexContent>
            <extension base="spml:ExtensibleType">
                <sequence>
                    <annotation>
                        <documentation>Open content is one or more instances of QueryClauseType (including
                            SelectionType) or LogicalOperator.
                        </documentation>
                    </annotation>

                    <element name="basePsoID" type="spml:PSOIdentifierType" minOccurs="0"/>
                </sequence>
                <attribute name="targetID" type="string" use="optional"/>
                <attribute name="scope" type="spmlsearch:ScopeType" use="optional"/>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="ResultsIteratorType">
        <complexContent>
            <extension base="spml:ExtensibleType">
                <attribute name="ID" type="xsd:ID"/>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SearchRequestType">
        <complexContent>
            <extension base="spml:RequestType">
                <sequence>
                    <element name="query" type="spmlsearch:SearchQueryType" minOccurs="0"/>
                    <element name="includeDataForCapability" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="returnData" type="spml:ReturnDataType" use="optional" default="everything"/>
                <attribute name="maxSelect" type="xsd:int" use="optional"/>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SearchResponseType">
        <complexContent>
            <extension base="spml:ResponseType">
                <sequence>
                    <element name="pso" type="spml:PSOType" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="iterator" type="spmlsearch:ResultsIteratorType" minOccurs="0"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>


    <complexType name="IterateRequestType">
        <complexContent>
            <extension base="spml:RequestType">
                <sequence>
                    <element name="iterator" type="spmlsearch:ResultsIteratorType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="CloseIteratorRequestType">
        <complexContent>
            <extension base="spml:RequestType">
                <sequence>
                    <element name="iterator" type="spmlsearch:ResultsIteratorType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>


    <complexType name="LogicalOperatorType">
        <complexContent>
            <extension base="spml:QueryClauseType">
            </extension>
        </complexContent>
    </complexType>


    <element name="query" type="spmlsearch:SearchQueryType"/>
    <element name="and" type="spmlsearch:LogicalOperatorType"/>
    <element name="or" type="spmlsearch:LogicalOperatorType"/>
    <element name="not" type="spmlsearch:LogicalOperatorType"/>
    <element name="searchRequest" type="spmlsearch:SearchRequestType"/>
    <element name="searchResponse" type="spmlsearch:SearchResponseType"/>
    <element name="iterateRequest" type="spmlsearch:IterateRequestType"/>
    <element name="iterateResponse" type="spmlsearch:SearchResponseType"/>
    <element name="closeIteratorRequest" type="spmlsearch:CloseIteratorRequestType"/>
    <element name="closeIteratorResponse" type="spml:ResponseType"/>

</schema>

